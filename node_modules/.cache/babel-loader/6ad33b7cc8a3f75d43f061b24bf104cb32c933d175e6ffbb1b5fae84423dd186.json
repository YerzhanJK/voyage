{"ast":null,"code":"// src/apiService.js\nconst API_URL = '/api'; // Use relative URL to leverage the proxy\n\nconst handleResponse = async response => {\n  if (!response.ok) {\n    const error = await response.json();\n    throw new Error(error.message || 'Unknown error');\n  }\n  return response.json();\n};\n\n// Fetch all destinations\nexport const getDestinations = async () => {\n  const response = await fetch(`${API_URL}/destinations/list`);\n  return handleResponse(response);\n};\n\n// Get a specific destination by ID\nexport const getDestination = async id => {\n  const response = await fetch(`${API_URL}/destinations/get/${id}`);\n  return handleResponse(response);\n};\n\n// Create a new destination\nexport const createDestination = async destination => {\n  // Ensure the destination object includes all required properties\n  const response = await fetch(`${API_URL}/destinations/create`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(destination)\n  });\n  return handleResponse(response);\n};\n\n// Update an existing destination\nexport const updateDestination = async (id, updates) => {\n  const response = await fetch(`${API_URL}/destinations/update/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(updates)\n  });\n  return handleResponse(response);\n};\n\n// Delete a destination\nexport const deleteDestination = async id => {\n  const response = await fetch(`${API_URL}/destinations/delete/${id}`, {\n    method: 'DELETE'\n  });\n  return handleResponse(response);\n};","map":{"version":3,"names":["API_URL","handleResponse","response","ok","error","json","Error","message","getDestinations","fetch","getDestination","id","createDestination","destination","method","headers","body","JSON","stringify","updateDestination","updates","deleteDestination"],"sources":["/Users/erzankabaev/Developer/voyage/client/src/apiService.js"],"sourcesContent":["// src/apiService.js\nconst API_URL = '/api'; // Use relative URL to leverage the proxy\n\nconst handleResponse = async (response) => {\n    if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.message || 'Unknown error');\n    }\n    return response.json();\n};\n\n// Fetch all destinations\nexport const getDestinations = async () => {\n    const response = await fetch(`${API_URL}/destinations/list`);\n    return handleResponse(response);\n};\n\n// Get a specific destination by ID\nexport const getDestination = async (id) => {\n    const response = await fetch(`${API_URL}/destinations/get/${id}`);\n    return handleResponse(response);\n};\n\n// Create a new destination\nexport const createDestination = async (destination) => {\n    // Ensure the destination object includes all required properties\n    const response = await fetch(`${API_URL}/destinations/create`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(destination),\n    });\n    return handleResponse(response);\n};\n\n// Update an existing destination\nexport const updateDestination = async (id, updates) => {\n    const response = await fetch(`${API_URL}/destinations/update/${id}`, {\n        method: 'PUT',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(updates),\n    });\n    return handleResponse(response);\n};\n\n// Delete a destination\nexport const deleteDestination = async (id) => {\n    const response = await fetch(`${API_URL}/destinations/delete/${id}`, {\n        method: 'DELETE',\n    });\n    return handleResponse(response);\n};\n"],"mappings":"AAAA;AACA,MAAMA,OAAO,GAAG,MAAM,CAAC,CAAC;;AAExB,MAAMC,cAAc,GAAG,MAAOC,QAAQ,IAAK;EACvC,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;IACd,MAAMC,KAAK,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACnC,MAAM,IAAIC,KAAK,CAACF,KAAK,CAACG,OAAO,IAAI,eAAe,CAAC;EACrD;EACA,OAAOL,QAAQ,CAACG,IAAI,CAAC,CAAC;AAC1B,CAAC;;AAED;AACA,OAAO,MAAMG,eAAe,GAAG,MAAAA,CAAA,KAAY;EACvC,MAAMN,QAAQ,GAAG,MAAMO,KAAK,CAAE,GAAET,OAAQ,oBAAmB,CAAC;EAC5D,OAAOC,cAAc,CAACC,QAAQ,CAAC;AACnC,CAAC;;AAED;AACA,OAAO,MAAMQ,cAAc,GAAG,MAAOC,EAAE,IAAK;EACxC,MAAMT,QAAQ,GAAG,MAAMO,KAAK,CAAE,GAAET,OAAQ,qBAAoBW,EAAG,EAAC,CAAC;EACjE,OAAOV,cAAc,CAACC,QAAQ,CAAC;AACnC,CAAC;;AAED;AACA,OAAO,MAAMU,iBAAiB,GAAG,MAAOC,WAAW,IAAK;EACpD;EACA,MAAMX,QAAQ,GAAG,MAAMO,KAAK,CAAE,GAAET,OAAQ,sBAAqB,EAAE;IAC3Dc,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,WAAW;EACpC,CAAC,CAAC;EACF,OAAOZ,cAAc,CAACC,QAAQ,CAAC;AACnC,CAAC;;AAED;AACA,OAAO,MAAMiB,iBAAiB,GAAG,MAAAA,CAAOR,EAAE,EAAES,OAAO,KAAK;EACpD,MAAMlB,QAAQ,GAAG,MAAMO,KAAK,CAAE,GAAET,OAAQ,wBAAuBW,EAAG,EAAC,EAAE;IACjEG,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACE,OAAO;EAChC,CAAC,CAAC;EACF,OAAOnB,cAAc,CAACC,QAAQ,CAAC;AACnC,CAAC;;AAED;AACA,OAAO,MAAMmB,iBAAiB,GAAG,MAAOV,EAAE,IAAK;EAC3C,MAAMT,QAAQ,GAAG,MAAMO,KAAK,CAAE,GAAET,OAAQ,wBAAuBW,EAAG,EAAC,EAAE;IACjEG,MAAM,EAAE;EACZ,CAAC,CAAC;EACF,OAAOb,cAAc,CAACC,QAAQ,CAAC;AACnC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}