{"ast":null,"code":"var _jsxFileName = \"/Users/erzankabaev/Developer/voyage/client/src/components/selectCountry.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst countries = [{\n  name: 'France',\n  cities: ['Paris', 'Lyon', 'Marseille']\n}, {\n  name: 'Italy',\n  cities: ['Rome', 'Milan', 'Venice']\n}, {\n  name: 'Japan',\n  cities: ['Tokyo', 'Kyoto', 'Osaka']\n}];\nfunction SelectCountry({\n  addDestination\n}) {\n  _s();\n  const [selectedCountry, setSelectedCountry] = useState(null);\n  const [selectedCity, setSelectedCity] = useState('');\n  const handleCountrySelect = country => {\n    setSelectedCountry(country);\n    setSelectedCity('');\n  };\n  const handleCitySelect = city => {\n    setSelectedCity(city);\n    addDestination({\n      country: selectedCountry,\n      city\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(DropdownButton, {\n      id: \"dropdown-country-button\",\n      title: \"Select Country\",\n      children: countries.map((country, index) => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n        onClick: () => handleCountrySelect(country.name),\n        children: country.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), selectedCountry && /*#__PURE__*/_jsxDEV(DropdownButton, {\n      id: \"dropdown-city-button\",\n      title: \"Select City\",\n      children: countries.find(c => c.name === selectedCountry).cities.map((city, index) => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n        onClick: () => handleCitySelect(city),\n        children: city\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), selectedCity && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Selected Destination: \", selectedCity, \", \", selectedCountry]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(SelectCountry, \"0F6dBlbMtEDtk/R+U3bCUX4g6BA=\");\n_c = SelectCountry;\nexport default SelectCountry;\nvar _c;\n$RefreshReg$(_c, \"SelectCountry\");","map":{"version":3,"names":["React","useState","Dropdown","DropdownButton","jsxDEV","_jsxDEV","countries","name","cities","SelectCountry","addDestination","_s","selectedCountry","setSelectedCountry","selectedCity","setSelectedCity","handleCountrySelect","country","handleCitySelect","city","children","id","title","map","index","Item","onClick","fileName","_jsxFileName","lineNumber","columnNumber","find","c","_c","$RefreshReg$"],"sources":["/Users/erzankabaev/Developer/voyage/client/src/components/selectCountry.js"],"sourcesContent":["import React, {useState} from 'react';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\n\nconst countries = [\n    { name: 'France', cities: ['Paris', 'Lyon', 'Marseille'] },\n    { name: 'Italy', cities: ['Rome', 'Milan', 'Venice'] },\n    { name: 'Japan', cities: ['Tokyo', 'Kyoto', 'Osaka'] },\n];\n\nfunction SelectCountry({addDestination}) {\n    const [selectedCountry, setSelectedCountry] = useState(null);\n    const [selectedCity, setSelectedCity] = useState('');\n\n    const handleCountrySelect = (country) => {\n        setSelectedCountry(country);\n        setSelectedCity('');\n    };\n\n    const handleCitySelect = (city) => {\n        setSelectedCity(city);\n        addDestination({ country: selectedCountry, city });\n    };\n\n   return  (\n   \n    <div>\n        <DropdownButton id=\"dropdown-country-button\" title=\"Select Country\">\n            {countries.map((country, index) => (\n                <Dropdown.Item key={index} onClick={() => handleCountrySelect(country.name)}>\n                    {country.name}\n                </Dropdown.Item>\n            ))}\n        </DropdownButton>\n\n        {selectedCountry && (\n            <DropdownButton id=\"dropdown-city-button\" title=\"Select City\">\n                {countries.find(c => c.name === selectedCountry).cities.map((city, index) => (\n                    <Dropdown.Item key={index} onClick={() => handleCitySelect(city)}>\n                        {city}\n                    </Dropdown.Item>\n                ))}\n            </DropdownButton>\n        )}\n\n        {selectedCity && (\n            <div>\n                <p>Selected Destination: {selectedCity}, {selectedCountry}</p>\n            </div>\n        )}\n    </div>\n);\n}\n    \n\nexport default SelectCountry;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}